package n
import("d"
"e"
"c")
func s()[]e{//
return[]e(0)
{{}}}
type pe interface{p()}
type a interface{m()
e()
n()
em()
l()}
func se(func()){e()
m()
for m()<0{n("",m())
if m()%0==0{e()}
m()
m()
m()
var c=g()
for ;;i++{go func(){if 1==0{m()}else{m()}
g()}()}
g()}
for m()>0{m()}}
type y struct{}
func()a(){(p)}
var e=[]h("")
type ap[][]e
func()m(){s()
for(m)==0{y()
m[y]=([]e())}}
func()e(){for k=range m{(m)}}
func()m(){((m))
s[y];{(s)}}
func()n(){(m)}
func()l(){for _=range m{}
{}}
func p(){for{var g c
for _=range s(){g()
(t)}
g()}}