defaults: &defaults
  docker:
    # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
    - image: circleci/golang:1.8

  working_directory: /go/src/github.com/building-microservices-with-go/chapter11-services-search

  environment:
    TEST_RESULTS: /tmp/test-results

version: 2
jobs:
  build:
    <<: *defaults

    steps:
      - checkout

      - run: mkdir -p $TEST_RESULTS

      - run: 
          name: Install dependencies
          command: |
            go get github.com/Masterminds/glide
            go get github.com/DATA-DOG/godog/cmd/godog
            go get github.com/jstemmer/go-junit-report
            go get honnef.co/go/tools/cmd/staticcheck
            go get github.com/stripe/safesql
            glide up
            curl -Ls -o /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.9.8/terraform_0.9.8_linux_amd64.zip
            sudo unzip /tmp/terraform.zip -d /usr/local/bin
      
      - run:
          name: Build application for linux
          command: make build_linux

  unit_test:
    <<: *defaults
    
    steps:
      - run: 
          name: Run unit tests
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make unit | tee ${TEST_RESULTS}/go-test.out

      - store_test_results:
          path: /tmp/test-results
   
  benchmark:
    <<: *defaults
    
    steps:
      - run: 
          name: Run benchmark tests
          command: make benchmark
  
  staticcheck:
    <<: *defaults
    
    steps:
      - run: 
          name: Static language checks
          command: make staticcheck
      
      - run: 
          name: Safe SQL checks
          command: make safesql

  integration_test:
    <<: *defaults
    
    steps:
      - setup_remote_docker

      - run: 
          name: Run integration tests
          command: make circleintegration
  
  deploy:
    <<: *defaults
    
    steps:
      - setup_remote_docker

      - run:
          name: Build and push Docker image
          command: |
            make build_docker
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push buildingmicroserviceswithgo/search:latest

      - deploy:
          name: Deploy to elastic beanstalk
          command: |
            cd terraform
            terraform init
            terraform plan
            terraform apply

      - run:
          name: Smoke test
          command: |
            cd terraform
            curl $(terraform output search_alb)/health


workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - unit_test
          requires:
            - build
      - benchmark
          requires:
            - build
      - staticcheck
          requires:
            - build
      - integration_test
          requires:
            - build
            - unit_test
            - benchmark
            - staticcheck
      - deploy:
          requires:
            - integration_test
